{"ast":null,"code":"var _jsxFileName = \"/Users/theerasan-s/Desktop/pokedex/src/components/PokedexCard/PokedexCard.js\";\nimport React from 'react';\nimport cute from '../../cute.png';\nimport { Container, CardImage, PokemonName, PokemonInformationContainer, PokemonInformation, StrengthGauge, StatusText, HealthGauge, WeaknessGauge, HappinessImage, DeleteButton, CloseIcon } from './styled';\n\nconst PokedexCard = props => {\n  const strength = props.pokemon.attacks ? parseInt(props.pokemon.attacks.length) : 0;\n  const weakness = props.pokemon.weaknesses ? parseInt(props.pokemon.weaknesses.length) : 0;\n  const hp = parseInt(props.pokemon.hp);\n  let damage = 0;\n  const happinessArray = [];\n\n  if (props.pokemon.attacks) {\n    props.pokemon.attacks.forEach(attack => {\n      const numberList = attack.damage.match(/\\d/g);\n\n      if (numberList !== null) {\n        const damageNumber = numberList.join('');\n        damage += parseInt(damageNumber);\n      }\n    });\n  }\n\n  const calculatedHappiness = (hp / 10 + damage / 10 + 10 - weakness) / 5;\n  const happiness = calculatedHappiness > 0 ? calculatedHappiness : 0;\n\n  for (let i = 0; i < happiness; i++) {\n    happinessArray.push( /*#__PURE__*/React.createElement(HappinessImage, {\n      src: cute,\n      alt: \"happiness level\",\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 10\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardImage, {\n    alt: `${props.pokemon.name}`,\n    src: props.pokemon.imageUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(PokemonInformationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(PokemonName, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, props.pokemon.name), /*#__PURE__*/React.createElement(PokemonInformation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(StatusText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 16\n    }\n  }, \"HP\"), /*#__PURE__*/React.createElement(HealthGauge, {\n    health: hp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 16\n    }\n  }), /*#__PURE__*/React.createElement(StatusText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 16\n    }\n  }, \"STR\"), /*#__PURE__*/React.createElement(StrengthGauge, {\n    level: strength,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 16\n    }\n  }), /*#__PURE__*/React.createElement(StatusText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 16\n    }\n  }, \"WEAK\"), /*#__PURE__*/React.createElement(WeaknessGauge, {\n    weak: weakness,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 16\n    }\n  })), happinessArray.length > 0 && happinessArray), /*#__PURE__*/React.createElement(DeleteButton, {\n    icon: /*#__PURE__*/React.createElement(CloseIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 19\n      }\n    }),\n    onClick: () => props.onDelete(props.pokemon),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 10\n    }\n  }));\n};\n\nexport default PokedexCard;","map":{"version":3,"sources":["/Users/theerasan-s/Desktop/pokedex/src/components/PokedexCard/PokedexCard.js"],"names":["React","cute","Container","CardImage","PokemonName","PokemonInformationContainer","PokemonInformation","StrengthGauge","StatusText","HealthGauge","WeaknessGauge","HappinessImage","DeleteButton","CloseIcon","PokedexCard","props","strength","pokemon","attacks","parseInt","length","weakness","weaknesses","hp","damage","happinessArray","forEach","attack","numberList","match","damageNumber","join","calculatedHappiness","happiness","i","push","name","imageUrl","onDelete"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport cute from '../../cute.png'\nimport {\n   Container,\n   CardImage,\n   PokemonName,\n   PokemonInformationContainer,\n   PokemonInformation,\n   StrengthGauge,\n   StatusText,\n   HealthGauge,\n   WeaknessGauge,\n   HappinessImage,\n   DeleteButton,\n   CloseIcon,\n} from './styled'\n\nconst PokedexCard = (props) => {\n   const strength = props.pokemon.attacks\n      ? parseInt(props.pokemon.attacks.length)\n      : 0\n   const weakness = props.pokemon.weaknesses\n      ? parseInt(props.pokemon.weaknesses.length)\n      : 0\n   const hp = parseInt(props.pokemon.hp)\n   let damage = 0\n   const happinessArray = []\n\n   if (props.pokemon.attacks) {\n      props.pokemon.attacks.forEach((attack) => {\n         const numberList = attack.damage.match(/\\d/g)\n\n         if (numberList !== null) {\n            const damageNumber = numberList.join('')\n            damage += parseInt(damageNumber)\n         }\n      })\n   }\n\n   const calculatedHappiness = (hp / 10 + damage / 10 + 10 - weakness) / 5\n   const happiness = calculatedHappiness > 0 ? calculatedHappiness : 0\n\n   for (let i = 0; i < happiness; i++) {\n      happinessArray.push(\n         <HappinessImage src={cute} alt=\"happiness level\" key={i} />\n      )\n   }\n\n   return (\n      <Container>\n         <CardImage\n            alt={`${props.pokemon.name}`}\n            src={props.pokemon.imageUrl}\n         />\n         <PokemonInformationContainer>\n            <PokemonName>{props.pokemon.name}</PokemonName>\n            <PokemonInformation>\n               <StatusText>HP</StatusText>\n               <HealthGauge health={hp} />\n               <StatusText>STR</StatusText>\n               <StrengthGauge level={strength} />\n               <StatusText>WEAK</StatusText>\n               <WeaknessGauge weak={weakness} />\n            </PokemonInformation>\n            {happinessArray.length > 0 && happinessArray}\n         </PokemonInformationContainer>\n         <DeleteButton\n            icon={<CloseIcon />}\n            onClick={() => props.onDelete(props.pokemon)}\n         />\n      </Container>\n   )\n}\n\nexport default PokedexCard\n"]},"metadata":{},"sourceType":"module"}